# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2016-02-09 05:59
from __future__ import unicode_literals

from django.db import migrations, models

mapping = {}


def create_base(apps, schema_editor):
    DataFile = apps.get_model('data_selfie', 'DataFile')
    BaseDataFile = apps.get_model('data_import', 'DataFile')

    for data_file in DataFile.objects.all():
        base_data_file = BaseDataFile()

        base_data_file.user = data_file.user_data.user
        base_data_file.file = data_file.file
        base_data_file.metadata = data_file.metadata
        base_data_file.source = 'data_selfie'

        base_data_file.save()

        mapping[data_file.id] = base_data_file.id


def wire_base(apps, schema_editor):
    DataFile = apps.get_model('data_selfie', 'DataFile')

    for data_file in DataFile.objects.all():
        data_file.parent = mapping[data_file.id]
        data_file.save()


class Migration(migrations.Migration):

    dependencies = [
        ('data_import', '0013_auto_20160209_0559'),
        ('data_selfie', '0003_userdata_seen_page'),
    ]

    operations = [
        # first create all of the BaseDataFiles, along with an ID mapping
        migrations.RunPython(create_base),
        # then set primary_key=False for the id column, since a table can't
        # have two primary keys
        migrations.AlterField(
            model_name='datafile',
            name='id',
            field=models.IntegerField(
                verbose_name='ID',
                primary_key=False),
        ),
        # then add the parent field as an IntegerField, which will be the new
        # primary key
        migrations.AddField(
            model_name='datafile',
            name='parent',
            field=models.IntegerField(null=True, unique=False, default=-1),
            preserve_default=False,
        ),
        # then set the parent of each DataFile to the previously created
        # BaseDataFile
        migrations.RunPython(wire_base),
        # continued in the next migration (because you can't RunPython and then
        # alerter state)
    ]
